#!/usr/bin/env perl
use Mojolicious::Lite -signatures;
use Mojo::File       qw/path/;
use Mojo::Collection qw/c/;

my $data_dir = app->home->child('data');

my $default_zoom = 5;
my $default_lat  = 37.09;
my $default_lon  = -96.7;

app->defaults(zoom => $default_zoom);

package Geofile {
  use Mojo::Base qw/-base -signatures/;
  use Mojo::File qw/path/;
  use Text::CSV_XS qw/csv/;

  has 'geodata';
  has 'header';
  has 'filename';

  sub name($self) {
    path($self->filename)->basename('.csv');
  }

  sub ingest($self, $name) {
    my ($header, $data) = read_file($name);
    $self->new(header => $header, geodata => $data, filename => $name);
  }

  sub read_file($name) {
   my %seen;
   my @header;
   my $data = csv(in => $name,
                 headers => sub {
                   my $nxt = ( $seen{$_[0]}++ ? $_[0] . '-' . $seen{$_[0]} : $_[0] );
                   push @header, $nxt;
                   $nxt;
                 });
   (\@header, $data);
  }
}

app->helper(set_defaults => sub($c) {
  $c->stash(zoom      => $c->param('zoom') || $default_zoom);
  $c->stash(lat       => $c->param('lat')  || $default_lat);
  $c->stash(lon       => $c->param('lon')  || $default_lon);
  $c->stash(geofiles  => []);
  $c->stash(csv_files => []);
});

get '/' => sub($c) {
  $c->set_defaults;
  $c->stash(csv_files => [
      $data_dir->list({dir => 1})->grep(sub { /.csv/ || -d "$_" })->sort->each
  ]);
} => 'index';

get '/show/csv/*name' => sub($c) {
  $c->set_defaults;
  my $name = $c->stash('name');
  my $io   = $data_dir->child("$name");
  if (-d $io) {
    $c->stash(geofiles =>
        $io->list->grep(sub { /\.csv/ })->map(sub { Geofile->ingest("$_") }));
  } else {
    $c->stash(geofiles => [Geofile->ingest("$io.csv")]);
  }
  $c->render(template => 'index');
} => 'show';

get 'datasets/*name/data.js' => { format => 'js' } => sub($c) {
  my $name = $c->stash('name');
  my $io = $data_dir->child($name);
  if (-d $io) {
    $c->stash(geofiles => $io->list->grep(sub { /\.csv/ })->map(sub { Geofile->ingest("$_") }));
  } else {
    $c->stash(geofiles => [Geofile->ingest("$io.csv")]);
  }

  $c->render('datasets', format => 'js');
} => 'datasets';

app->start;
